set ideajoin
set sneak
set surround
set idearefactormode keep
set ignorecase smartcase
set matchedpairs=(:),[:],{:},<:>

Plug 'chrisbra/matchit'
Plug 'vimscripts/argtextobj.vim'
let g:argtextobj_pairs="[:],(:),<:>"

let mapleader = " "

nnoremap <leader>oi :action OptimizeImports<CR>
nnoremap <leader>oc :action ReformatCode<CR>
nnoremap <leader>re :action RenameElement<CR>
nnoremap <leader>rf :action RenameFile<CR>
nnoremap <leader>ri :action Inline<CR>
nnoremap <leader>rv :action IntroduceVariable<CR>
nnoremap <leader>rm :action ExtractMethod<CR>
nnoremap <leader>rr :action Refactorings.QuickListPopupAction<CR>
nnoremap <leader>rp :action IntroduceParameter<CR>
nnoremap <leader>im :action ImplementMethods<CR>
nnoremap <leader>om :action OverrideMethods<CR>
nnoremap <leader>qf :action ShowIntentionActions<CR>

nnoremap <leader>gd :action GotoDeclaration<CR>
nnoremap <leader>gu :action FindUsages<CR>
nnoremap <leader>gi :action GotoImplementation<CR>
nnoremap <leader>gs :action ActivateStructureToolWindow<CR>
nnoremap <leader>sp :action ParameterInfo<CR>

" Navigation
map [[ <Action>(MethodUp)
map ]] <Action>(MethodDown)
nnoremap ]e :action GotoNextError<CR>
nnoremap [e :action GotoPreviousError<CR>
nnoremap ]h :action VcsShowNextChangeMarker<CR>
nnoremap [h :action VcsShowPrevChangeMarker<CR>

" IDE Shortcuts
sethandler <C-C> a:ide
sethandler <C-V> a:ide
sethandler <C-X> a:ide
sethandler <C-F> a:ide
sethandler <C-R> a:ide
sethandler <C-O> a:ide
sethandler <C-A> a:ide
sethandler <C-N> a:ide
sethandler <C-P> a:ide
sethandler <C-W> a:ide
